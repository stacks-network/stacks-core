[package]
name = "stackslib"
version = "0.0.1"
edition = "2021"
resolver = "3"
authors = [
    "Jude Nelson <jude@stacks.org>",
    "Aaron Blankstein <aaron@blockstack.com>",
    "Ludo Galabru <ludovic@blockstack.com>",
]
license = "GPLv3"
homepage = "https://github.com/blockstack/stacks-blockchain"
repository = "https://github.com/blockstack/stacks-blockchain"
description = "Reference implementation of the Stacks 2.0 Blockchain"
keywords = [
    "stacks",
    "stx",
    "bitcoin",
    "crypto",
    "blockstack",
    "decentralized",
    "dapps",
    "blockchain",
]
readme = "README.md"
rust-version = "1.80"

[lib]
name = "blockstack_lib"
path = "src/lib.rs"

[[bin]]
name = "stacks-inspect"
path = "src/main.rs"

[[bin]]
name = "clarity-cli"
path = "src/clarity_cli_main.rs"

[[bin]]
name = "blockstack-cli"
path = "src/blockstack_cli.rs"

[features]
default = []
profile-sqlite = []
disable-costs = []
developer-mode = ["clarity/developer-mode"]
monitoring_prom = ["prometheus"]
slog_json = ["stacks-common/slog_json", "clarity/slog_json", "pox-locking/slog_json"]
testing = ["chrono", "stacks-common/testing", "clarity/testing"]

[target.'cfg(all(any(target_arch = "x86_64", target_arch = "x86", target_arch = "aarch64"), not(any(target_os="windows"))))'.dependencies]
sha2 = { workspace = true, features = ["asm"] }

[target.'cfg(not(any(target_os = "macos",target_os="windows", target_arch = "arm" )))'.dependencies]
tikv-jemallocator.workspace = true

[dependencies]
chrono = { workspace = true, optional = true }
clarity = { workspace = true, features = ["rusqlite"] }
ed25519-dalek.workspace = true
hashbrown.workspace = true
lazy_static.workspace = true
libstackerdb.workspace = true
mio.workspace = true
percent-encoding.workspace = true
pox-locking.workspace = true
prometheus = { workspace = true, optional = true }
rand.workspace = true
rand_chacha.workspace = true
regex.workspace = true
ripemd.workspace = true
rusqlite.workspace = true
serde.workspace = true
serde_derive.workspace = true
serde_json = { workspace = true, features = ["arbitrary_precision", "unbounded_depth"] }
siphasher.workspace = true
slog.workspace = true
stacks-common.workspace = true
time.workspace = true
toml.workspace = true
url.workspace = true

[target.'cfg(any(not(any(target_arch = "x86_64", target_arch = "x86", target_arch = "aarch64")), any(target_os="windows")))'.dependencies]
sha2.workspace = true

[dev-dependencies]
assert-json-diff.workspace = true
chrono.workspace = true
clarity = { workspace = true, features = ["rusqlite", "testing"] }
mutants.workspace = true
proptest.workspace = true
rlimit.workspace = true
rstest.workspace = true
rstest_reuse.workspace = true
stacks-common = { workspace = true, features = ["testing"] }
stdext.workspace = true
stx-genesis.workspace = true
tempfile.workspace = true
