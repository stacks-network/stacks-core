[package]
name = "stackslib"
version = "0.0.1"
authors = [ "Jude Nelson <jude@stacks.org>",
            "Aaron Blankstein <aaron@blockstack.com>",
            "Ludo Galabru <ludovic@blockstack.com>" ]
license = "GPLv3"
homepage = "https://github.com/blockstack/stacks-blockchain"
repository = "https://github.com/blockstack/stacks-blockchain"
description = "Reference implementation of the Stacks 2.0 Blockchain"
keywords = [ "stacks", "stx", "bitcoin", "crypto", "blockstack", "decentralized", "dapps", "blockchain" ]
readme = "README.md"
resolver = "2"
edition = "2021"
rust-version = "1.80"

[lib]
name = "blockstack_lib"
path = "src/lib.rs"

[[bin]]
name = "stacks-inspect"
path = "src/main.rs"

[[bin]]
name = "clarity-cli"
path = "src/clarity_cli_main.rs"

[[bin]]
name = "blockstack-cli"
path = "src/blockstack_cli.rs"

[dependencies]
ed25519-dalek = { workspace = true }
rand = { workspace = true }
rand_core = { workspace = true }
rand_chacha = { version = "0.3.1", default-features = false }
serde = { workspace = true }
serde_derive = { workspace = true }
serde_json = { workspace = true, features = ["arbitrary_precision", "unbounded_depth"] }
ripemd = { workspace = true }
regex = { workspace = true }
mio = { version = "0.6", default-features = false }
lazy_static = { workspace = true }
url = { workspace = true }
percent-encoding = { version = "2.1.0", default-features = false }
prometheus = { workspace = true, optional = true }
slog = { workspace = true }
chrono = { workspace = true, optional = true }
clarity = { path = "../clarity" }
stacks-common = { path = "../stacks-common" }
pox-locking = { path = "../pox-locking" }
libstackerdb = { path = "../libstackerdb" }
siphasher = { version = "0.3.7", default-features = false }
hashbrown = { workspace = true }
rusqlite = { workspace = true }
time = { version = "0.3.41", default-features = false }
toml = { workspace = true }

[target.'cfg(not(any(target_os = "macos",target_os="windows", target_arch = "arm" )))'.dependencies]
tikv-jemallocator = { workspace = true }

[target.'cfg(unix)'.dependencies]
nix = { workspace = true }

[target.'cfg(windows)'.dependencies]
winapi = { workspace = true, features = ["consoleapi", "handleapi", "synchapi", "winbase"] }

[target.'cfg(windows)'.dev-dependencies]
winapi = { workspace = true, features = ["fileapi", "processenv", "winnt"] }

[dev-dependencies]
assert-json-diff = { workspace = true }
stdext = { workspace = true }
stx-genesis = { path = "../stx-genesis"}
clarity = { features = ["default", "testing"], path = "../clarity" }
stacks-common = { features = ["default", "testing"], path = "../stacks-common" }
rstest = { workspace = true }
rstest_reuse = { workspace = true }
mutants = { workspace = true }
rlimit = { version = "0.10.2", default-features = false }
chrono = { workspace = true }
tempfile = { workspace = true }
proptest = { workspace = true, features = ["std"] }

[features]
default = []
profile-sqlite = []
disable-costs = []
developer-mode = ["clarity/developer-mode"]
monitoring_prom = ["prometheus"]
slog_json = ["stacks-common/slog_json", "clarity/slog_json", "pox-locking/slog_json"]
testing = ["chrono", "stacks-common/testing", "clarity/testing"]

[target.'cfg(all(any(target_arch = "x86_64", target_arch = "x86", target_arch = "aarch64"), not(any(target_os="windows"))))'.dependencies]
sha2 = { workspace = true, features = ["asm"] }

[target.'cfg(any(not(any(target_arch = "x86_64", target_arch = "x86", target_arch = "aarch64")), any(target_os="windows")))'.dependencies]
sha2 = { workspace = true }
