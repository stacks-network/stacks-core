## Run Stacks Signer Unit Tests
name: Tests::Stacks Signer Unit Tests

on:
  workflow_call:

## env vars are transferred to composite action steps
env:
  BITCOIND_TEST: 0
  RUST_BACKTRACE: full
  SEGMENT_DOWNLOAD_TIMEOUT_MINS: 3
  TEST_TIMEOUT: 30

concurrency:
  group: stacks-signer-tests-${{ github.head_ref || github.ref || github.run_id}}
  ## Only cancel in progress if this is for a PR
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  generate-tests:
    name: Generate JSON of tests to run
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      ## Setup test environment
      - name: Setup Test Environment
        id: setup_tests
        uses: stacks-network/actions/stacks-core/testenv@main
        with:
          btc-version: "25.0"
      - name: Generate tests JSON
        id: generate_tests_json
        # List all of the tests using the nextest archive (so we don't need to do another build task)
        # Filter them such that we only select tests from `--bin stacks-signer`
        # Transform the output JSON into something that can be used as the matrix input
        run: |
          cargo nextest list --archive-file ~/test_archive.tar.zst -Tjson | \
          jq -c '.["rust-suites"]["stacks-signer"]["testcases"] | keys' > ./tests.json
      - id: set-matrix
        run: |
          json_obj=`cat ./tests.json`
          echo "matrix=$json_obj" >> $GITHUB_OUTPUT

  # stacks signer unit tests with code coverage
  unit-tests:
    needs: generate-tests
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      ## Continue with the test matrix even if we've had a failure
      fail-fast: false
      ## Run a maximum of 32 concurrent tests from the test matrix
      max-parallel: 32
      matrix:
        test-name: ${{fromJson(needs.generate-tests.outputs.matrix)}}

    steps:
      ## Setup test environment
      - name: Setup Test Environment
        id: setup_tests
        uses: stacks-network/actions/stacks-core/testenv@main
        with:
          btc-version: "25.0"

      ## Run test matrix using restored cache of archive file
      ##   - Test will timeout after env.TEST_TIMEOUT minutes
      - name: Run Tests
        id: run_tests
        timeout-minutes: ${{ fromJSON(env.TEST_TIMEOUT) }}
        uses: stacks-network/actions/stacks-core/run-tests@main
        with:
          test-name: ${{ matrix.test-name }}
          threads: 1

      ## Create and upload code coverage file
      - name: Code Coverage
        id: codecov
        uses: stacks-network/actions/codecov@main
        with:
          test-name: ${{ matrix.test-name }}

  check-tests:
    name: Check Tests
    runs-on: ubuntu-latest
    if: always()
    needs:
      - unit-tests
    steps:
      - name: Check Tests Status
        id: check_tests_status
        uses: stacks-network/actions/check-jobs-status@main
        with:
          jobs: ${{ toJson(needs) }}
          summary_print: "true"
