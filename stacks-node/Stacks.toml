[node]
name = "helium-node"
rpc_bind = "127.0.0.1:20443"

## Settings for local testnet, relying on a local bitcoind server
## running with the following bitcoin.conf:
##
##    chain=regtest
##    disablewallet=0
##    txindex=1
##    server=1
##    rpcuser=helium-node
##    rpcpassword=secret
##
# [burnchain]
# chain = "bitcoin"
# mode = "helium"
# peer_host = "127.0.0.1"
# peer_port = 18444
# rpc_port = 18443
# rpc_ssl = false
# username = "helium-node"
# password = "secret"
# timeout = 30
# local_mining_public_key = "04ee0b1602eb18fef7986887a7e8769a30c9df981d33c8380d255edef003abdcd243a0eb74afdf6740e6c423e62aec631519a24cf5b1d62bf8a3e06ddc695dcb77"
# satoshis_per_byte = 50
# commit_anchor_block_within = 3000

## Settings for public testnet, relying on a remote bitcoind server
## hosted by blockstack
##
# [burnchain]
# chain = "bitcoin"
# mode = "argon"
# peer_host = "argon.blockstack.org"
# satoshis_per_byte = 50
# commit_anchor_block_within = 10000
# rpc_port = 3000
# peer_port = 18444

## Settings for a local testnet simulating a burnchain
## Best setup for smart contract development
##
[burnchain]
chain = "bitcoin"
mode = "mocknet"
commit_anchor_block_within = 5000

# These are addresses from the README.md
[[ustx_balance]]
# Private key: b8d99fd45da58038d630d9855d3ca2466e8e0f89d3894c4724f0efc9ff4b51f001
address = "ST2ZRX0K27GW0SP3GJCEMHD95TQGJMKB7G9Y0X1MH"
amount = 100000000

[[ustx_balance]]
# Private key: 3a4e84abb8abe0c1ba37cef4b604e73c82b1fe8d99015cb36b029a65099d373601
address = "ST26FVX16539KKXZKJN098Q08HRX3XBAP541MFS0P"
amount = 100000000

[[ustx_balance]]
# Private key: 052cc5b8f25b1e44a65329244066f76c8057accd5316c889f476d0ea0329632c01
address = "ST3CECAKJ4BH08JYY7W53MC81BYDT4YDA5M7S5F53"
amount = 100000000

[[ustx_balance]]
# Private key: 9aef533e754663a453984b69d36f109be817e9940519cc84979419e2be00864801
address = "ST31HHVBKYCYQQJ5AQ25ZHA6W2A548ZADDQ6S16GP"
amount = 100000000

## Event dispatcher
## The stacks blockchain can be observed by sidecar processes, notified through TCP socket, of events such as:
## - print
## - stx-transfer / stx-burn
## - ft-mint / ft-transfer
## - nft-mint / nft-transfer
## A demo is available here: https://github.com/blockstack/stacks-blockchain-sidecar
##
# [[events_observer]]
# port = 8080
# address = "127.0.0.1"
# events_keys = [
#     "STGT7GSMZG7EA0TS6MVSKT5JC1DCDFGZWJJZXN8A.store::print",
#     "STGT7GSMZG7EA0TS6MVSKT5JC1DCDFGZWJJZXN8A.contract.ft-token",
#     "STGT7GSMZG7EA0TS6MVSKT5JC1DCDFGZWJJZXN8A.contract.nft-token",
#     "stx"
# ]

## Atlas database
## The Atlas database, which handles file attachments, can be configured here
## The values used in the example below are the minimum values which Atlas will accept
## 
#[atlas]
#attachments_max_size = 1048576
#max_uninstantiated_attachments = 10000
#uninstantiated_attachments_expire_after = 3600
#unresolved_attachment_instances_expire_after = 172800
